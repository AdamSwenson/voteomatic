<?php

namespace Tests\Http\Controllers;

use App\Http\Controllers\ResultsController;
use App\Models\Motion;
use Tests\TestCase;

class ResultsControllerTest extends TestCase
{

    //todo authorization

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->motion = Motion::factory()->create();
        $this->path = '/results/' . $this->motion->id;
    }

    /** @test */
    public function getResultsWithoutCounts()
    {
        //prep
//        $payload = ['counts' => false];

        //call
        $response = $this->get($this->path); //, $payload);

        //check
        $response->assertStatus(200)
        ->assertExactJson([
            'passed' => $this->motion->passed,
            'totalVotes' => $this->motion->totalVotesCast
        ]); //checking exact to make sure counts not sent


    }



    /** @test */
    public function getCounts()
    {
        //prep
        $path = $this->path . '/counts';

        //call
        $response = $this->get($path);

        //check
        $response->assertStatus(200)
            ->assertExactJson([
//                'passed' => $this->motion->passed,
//                'totalVotes' => $this->motion->totalVotesCast,
                'yayCount' => count($this->motion->affirmativeVotes),
                'nayCount'=> count($this->motion->negativeVotes)
            ]); //checking exact to make sure counts not sent

    }






}
